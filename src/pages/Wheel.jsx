import { useState, useRef, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { 
  ArrowLeft, Heart, Smile, Meh, Frown, Activity, 
  BookOpen, ChevronDown, ChevronUp, Save, RefreshCw,
  Plus, Minus, Info, Check
} from 'lucide-react';
import MultiRingWheel from '../components/EmotionWheel.jsx';
import { updateProgress } from '../utils/progress';

const FEELINGS_WHEEL = [
  {
    core: 'ุณุนูุฏ',
    color: '#FFDD57',
    desc: 'ุงูุณุนุงุฏุฉ ุทุงูุฉ ุฅูุฌุงุจูุฉ ุชุนูุณ ุฑุถุง ูุงูุชูุงู ูุงุฑุชุจุงุท.',
    coping: ['ุดุงุฑู ุงูุงูุชูุงู ูุน ุงูุขุฎุฑูู', 'ุณุฌูู ุงููุญุธุฉ ุงูุฌูููุฉ ูุชุงุจุฉู', 'ูุงุฑุณ ูุดุงุทูุง ููุชุนูุง ูุชุนุฒูุฒ ุงูุดุนูุฑ'],
    middle: [
      { name: 'ูุฑุญ',   outer: ['ูุจูู', 'ุซุงุฆุฑ'] },
      { name: 'ูููุน',  outer: ['ูุจุชูุฌ', 'ุญุฑ'] },
      { name: 'ููุชู',  outer: ['ูุชุณุงุฆู', 'ูุถููู'] },
      { name: 'ูุฎูุฑ',  outer: ['ูุงุซู', 'ูุงุฌุญ'] },
      { name: 'ููุจูู', outer: ['ููู', 'ูุญุชุฑู'] },
      { name: 'ููู',   outer: ['ุงุจุฏุงุนู', 'ุดุฌุงุน'] },
      { name: 'ูุณุงูู', outer: ['ุดุงูุฑ', 'ูุญุจ'] },
      { name: 'ูุงุซู',  outer: ['ูุฏูุฏ', 'ุญุณุงุณ'] },
      { name: 'ูุชูุงุฆู',outer: ['ูููู', 'ูุชุญูุณ'] },
    ],
  },
  {
    core: 'ุญุฒู',
    color: '#8CB4FF',
    desc: 'ุงูุญุฒู ุฅุดุงุฑุฉ ูููุฏ ุฃู ุงุญุชูุงุฌ ุบูุฑ ูููุจูู ูุณุชุญู ุงูุฑุนุงูุฉ.',
    coping: ['ุงููุญ ููุณู ุฅุฐููุง ุจุงูุจูุงุก', 'ุงูุชุจ ุฑุณุงูุฉ ูุฏุงุน ุฃู ูุจูู', 'ุชูุงุตู ูุน ุตุฏูู ุฏุงุนู'],
    middle: [
      { name: 'ูุฌุฑูุญ', outer: ['ูุฎูุจ', 'ููุญุฑุฌ'] },
      { name: 'ููุชุฆุจ', outer: ['ุฎุงูู ุงููุดุงุนุฑ', 'ูุชุฏูู'] },
      { name: 'ูุฐูุจ',  outer: ['ุฎุฌูู', 'ูุงุฏู'] },
      { name: 'ุจุงุฆุณ',  outer: ['ุญุฒูู', 'ุนุงุฌุฒ'] },
      { name: 'ุถุนูู',  outer: ['ุถุญูุฉ', 'ูุด'] },
      { name: 'ูุญูุฏ',  outer: ['ููุฌูุฑ', 'ูุนุฒูู'] },
    ],
  },
  {
    core: 'ูุชูุงุฌุฆ',
    color: '#F97316',
    desc: 'ุงูููุงุฌุฃุฉ ุฑุฏ ูุนู ูุญุฏุซ ุบูุฑ ูุชููุน ูููุช ุงูุงูุชุจุงู ููุญุธุฉ ุงูุญุงุถุฑุฉ.',
    coping: ['ุชูููุณ ุจุนูู ูุจู ุงูุญูู', 'ูุงุญุธ ุงูุชูุงุตูู', 'ุฏููู ูุง ุชุนูููุชู'],
    middle: [
      { name: 'ูุชุญูุณ',  outer: ['ูุดุท', 'ูุชููู'] },
      { name: 'ููุฏูุด',  outer: ['ุฑูุจุฉ', 'ูุจูุฑ'] },
      { name: 'ูุชุดูู',  outer: ['ูุชุญูุฑ', 'ุฎูุจุฉ ุฃูู'] },
      { name: 'ูุฐููู',  outer: ['ูุตุฏูู', 'ูุฒุน'] },
    ],
  },
  {
    core: 'ุบุงุถุจ',
    color: '#EF4444',
    desc: 'ุงูุบุถุจ ุทุงูุฉ ุฏูุงุนูุฉ ุชุญูู ุงูุญุฏูุฏ ุนูุฏ ุงูุดุนูุฑ ุจุงูุธูู.',
    coping: ['ุชูููุณ 4-7-8 ูุชูุฏุฆุฉ ุงูุฌุณุฏ', 'ุงูุชุจ ูุง ุฃุบุถุจู', 'ุญููู ุงูุทุงูุฉ ูุชูุฑูู ุจุฏูู'],
    middle: [
      { name: 'ุฎุฐูุงู',  outer: ['ุฎูุงูุฉ', 'ูุณุชุงุก'] },
      { name: 'ุฅุฐูุงู',  outer: ['ุงุถุทูุงุฏ', 'ุณุฎุฑูุฉ'] },
      { name: 'ุญูุฏ',    outer: ['ูุงูู', 'ุงูุชูู'] },
      { name: 'ุนุฏูุงูู', outer: ['ุงุณุชูุฒุงุฒ', 'ุดุฑุณ'] },
      { name: 'ูุญุจุท',   outer: ['ูุญุจุท', 'ููุฒุนุฌ'] },
      { name: 'ููุญุฑุฌ',  outer: ['ูุชุดูู', 'ุฑุงูุถ'] },
      { name: 'ูุชุจุงุนุฏ', outer: ['ููุณุญุจ', 'ูุงูุฏ ุฅุญุณุงุณ'] },
    ],
  },
  {
    core: 'ูุดูุฆุฒ',
    color: '#34D399',
    desc: 'ุงูุงุดูุฆุฒุงุฒ ูุฏูุนู ููุงุจุชุนุงุฏ ุนูุง ุชุนุชุจุฑู ุบูุฑ ููุจูู.',
    coping: ['ุญุงูุธ ุนูู ูุธุงูุชู ูุญุฏูุฏู', 'ุฏููู ูุง ูุซูุฑ ุงูุดุนูุฑ', 'ุงุณุชุฎุฏู ุงูุชูููุฑ ูุชูููู ูููู'],
    middle: [
      { name: 'ูููุฑ',     outer: ['ููุน', 'ูุชุฑุฏุฏ'] },
      { name: 'ูุธูุน',     outer: ['ูุฑูู', 'ูุดูุฆุฒ'] },
      { name: 'ุฎุงุฆุจ ุฃูู', outer: ['ุซุงุฑ', 'ูุฑููุน'] },
      { name: 'ุฑุงูุถ',     outer: ['ููุญุฑุฌ', 'ุณุฑูุน ุงูุญูู'] },
    ],
  },
  {
    core: 'ุณุฆ',
    color: '#A78BFA',
    desc: 'ุงูุดุนูุฑ ุจุงูุณูุก ูุฏ ูุฏู ุนูู ุฅุฑูุงู ุฃู ุชูุชุฑ ูุฒูู.',
    coping: ['ุฎุฐ ุงุณุชุฑุงุญุฉ ูุตูุฑุฉ', 'ูุงุฑุณ ุงูุชุฃูู 5 ุฏูุงุฆู', 'ุชูุงุตู ูุน ุดุฎุต ุฏุงุนู'],
    middle: [
      { name: 'ูุถุฌุฑ',  outer: ['ุบูุฑ ููุชุฑุซ', 'ุจููุฏ'] },
      { name: 'ูุดุบูู', outer: ['ูุถุบูุท', 'ูุณุชุนุฌู'] },
      { name: 'ูุถุบูุท', outer: ['ุงุฑุชุจุงู', 'ุฎุงุฑุฌ ุงูุณูุทุฑุฉ'] },
      { name: 'ูุชุนุจ',  outer: ['ูุนุณุงู', 'ูุชุดุชุช'] },
    ],
  },
];

// ุงูุฃููููุงุช ููู ุดุนูุฑ ุฃุณุงุณู
const emotionIcons = {
  ุณุนูุฏ: <Smile size={24} />,
  ุญุฒู: <Frown size={24} />,
  ูุชูุงุฌุฆ: <BookOpen size={24} />,
  ุบุงุถุจ: <Activity size={24} />,
  ูุดูุฆุฒ: <Meh size={24} />,
  ุณุฆ: <Heart size={24} />
};

export default function WheelPage() {
  const navigate = useNavigate();
  const [selected, setSelected] = useState(null);
  const [intensity, setIntensity] = useState(5);
  const [details, setDetails] = useState({ description: '', context: '' });
  const [showCoping, setShowCoping] = useState(false);
  const [saved, setSaved] = useState(false);
  const wheelRef = useRef(null);

  // ุชุญุฌูู ุงูุนุฌูุฉ ุจูุงุกู ุนูู ุญุฌู ุงูุดุงุดุฉ
  useEffect(() => {
    const updateSize = () => {
      if (wheelRef.current) {
        const width = Math.min(window.innerWidth * 0.9, 500);
        wheelRef.current.style.width = `${width}px`;
        wheelRef.current.style.height = `${width}px`;
      }
    };

    updateSize();
    window.addEventListener('resize', updateSize);
    return () => window.removeEventListener('resize', updateSize);
  }, []);

  const onSave = () => {
    if (!selected) return;
    
    const logs = JSON.parse(localStorage.getItem('feelingsLogs') ?? '[]');
    logs.push({ 
      feeling: selected.name, 
      intensity, 
      ...details, 
      ts: Date.now(),
      color: selected.coreColor
    });
    
    localStorage.setItem('feelingsLogs', JSON.stringify(logs));
    setDetails({ description: '', context: '' });
    setIntensity(5);
    setSaved(true);
    
    // โ ุชุณุฌูู ุงูุชูุฏูู
    updateProgress({
      entries: 1,
      timeline: { label: `ุงุฎุชุงุฑ ุดุนูุฑ: ${selected.name} ๐` }
    });
    
    // ุฅุนุงุฏุฉ ุชุนููู ุงูุญุงูุฉ ุจุนุฏ 2 ุซุงููุฉ
    setTimeout(() => setSaved(false), 2000);
  };

  const resetSelection = () => {
    setSelected(null);
    setShowCoping(false);
    setDetails({ description: '', context: '' });
    setIntensity(5);
  };

  const increaseIntensity = () => {
    if (intensity < 10) setIntensity(intensity + 1);
  };

  const decreaseIntensity = () => {
    if (intensity > 1) setIntensity(intensity - 1);
  };

  // ุงูุญุตูู ุนูู ููู ุงูุฎูููุฉ ุจูุงุกู ุนูู ุงููุดุงุนุฑ ุงูุฃุณุงุณูุฉ
  const getBgColor = () => {
    if (!selected) return 'bg-gradient-to-br from-[#f0f9f5] to-[#e0f0e9]';
    
    const colorMap = {
      ุณุนูุฏ: 'bg-gradient-to-br from-yellow-50 to-yellow-100',
      ุญุฒู: 'bg-gradient-to-br from-blue-50 to-blue-100',
      ูุชูุงุฌุฆ: 'bg-gradient-to-br from-orange-50 to-orange-100',
      ุบุงุถุจ: 'bg-gradient-to-br from-red-50 to-red-100',
      ูุดูุฆุฒ: 'bg-gradient-to-br from-green-50 to-green-100',
      ุณุฆ: 'bg-gradient-to-br from-purple-50 to-purple-100'
    };
    
    return colorMap[selected.core] || 'bg-gradient-to-br from-[#f0f9f5] to-[#e0f0e9]';
  };

  return (
    <div className={`flex flex-col min-h-screen transition-colors duration-500 ${getBgColor()}`}>
      {/* Header */}
      <header className="flex items-center p-4 justify-between bg-white/80 backdrop-blur-sm shadow-sm">
        <button 
          onClick={() => navigate(-1)} 
          className="flex items-center justify-center w-10 h-10 rounded-full bg-[#e7f3ee] text-[#4e9778]"
        >
          <ArrowLeft size={20} />
        </button>
        <div className="flex flex-col items-center">
          <h2 className="text-xl font-bold text-[#0e1b15]">ุนุฌูุฉ ุงููุดุงุนุฑ</h2>
          <p className="text-xs text-[#5a8c76]">ุงุณุชูุดู ูุดุงุนุฑู ูุชููููุง</p>
        </div>
        <button 
          onClick={resetSelection}
          className="flex items-center justify-center w-10 h-10 rounded-full bg-[#e7f3ee] text-[#4e9778]"
        >
          <RefreshCw size={20} />
        </button>
      </header>

      {/* Wheel Container */}
      <div className="flex justify-center p-4">
        <div 
          ref={wheelRef}
          className="relative transition-all duration-500 rounded-full shadow-lg"
        >
          <MultiRingWheel 
            data={FEELINGS_WHEEL} 
            onSelect={(emotion) => {
              setSelected(emotion);
              setShowCoping(false);
            }}
          />
        </div>
      </div>

      {/* Instructions */}
      {!selected && (
        <div className="flex flex-col items-center px-4 mb-4">
          <div className="bg-white rounded-xl p-4 shadow-sm max-w-md w-full">
            <div className="flex items-center mb-2">
              <Info size={20} className="text-[#4e9778] mr-2" />
              <h3 className="font-medium text-[#0e1b15]">ููู ุชุณุชุฎุฏู ุงูุนุฌูุฉ</h3>
            </div>
            <ul className="text-sm text-[#374151] list-disc list-inside space-y-1">
              <li>ุงููุฑ ุนูู ุงููุดุงุนุฑ ุงูุฃุณุงุณูุฉ (ุงูุฏูุงุฆุฑ ุงูุฏุงุฎููุฉ ุงูููููุฉ)</li>
              <li>ุงุฎุชุฑ ุงููุดุงุนุฑ ุงููุฑุนูุฉ (ุงูุทุจูุงุช ุงูุฎุงุฑุฌูุฉ)</li>
              <li>ุญุฏุฏ ุดุฏุฉ ุงูุดุนูุฑ ุจุงุณุชุฎุฏุงู ุงูุดุฑูุท ุงูููุฒูู</li>
              <li>ุฃุถู ุชูุงุตูู ุนู ุดุนูุฑู ูููููู</li>
              <li>ุงุญูุธ ุชุฏูููุงุชู ููุชุงุจุนุฉ ูุดุงุนุฑู</li>
            </ul>
          </div>
        </div>
      )}

      {/* Details Section */}
      <div className="flex-1 overflow-y-auto px-4 pb-20">
        {selected ? (
          <div className="bg-white rounded-xl shadow-sm p-4 mb-4 transition-all duration-300">
            {/* Emotion Path */}
            <div className="flex items-center justify-center mb-3">
              <div className="flex items-center bg-[#f0f9f4] px-3 py-1 rounded-full">
                <span className="text-xs text-[#0e1b15]">{selected.core}</span>
                <span className="mx-1 text-[#5a8c76]">โ</span>
                {selected.middleName && (
                  <>
                    <span className="text-xs text-[#0e1b15]">{selected.middleName}</span>
                    <span className="mx-1 text-[#5a8c76]">โ</span>
                  </>
                )}
                <span className="text-xs text-[#0e1b15] font-medium">{selected.name}</span>
              </div>
            </div>

            {/* Emotion Header */}
            <div className="flex items-center justify-center mb-3">
              <div 
                className="w-12 h-12 rounded-full flex items-center justify-center mr-2"
                style={{ backgroundColor: selected.coreColor + '30' }}
              >
                {emotionIcons[selected.core]}
              </div>
              <h1 
                className="text-xl font-bold text-center"
                style={{ color: selected.coreColor }}
              >
                {selected.name}
              </h1>
            </div>

            {/* Description */}
            <p className="text-center text-sm mb-4 text-[#374151]">{selected.desc}</p>

            {/* Intensity Control */}
            <div className="mb-4">
              <div className="flex justify-between items-center mb-1">
                <label className="text-sm font-medium text-[#0e1b15]">ุดุฏุฉ ุงูุดุนูุฑ</label>
                <div className="flex items-center">
                  <button 
                    onClick={decreaseIntensity}
                    className="w-8 h-8 rounded-full bg-[#e7f3ee] flex items-center justify-center text-[#4e9778]"
                  >
                    <Minus size={16} />
                  </button>
                  <div 
                    className="mx-2 w-10 h-10 rounded-full flex items-center justify-center font-bold text-white"
                    style={{ backgroundColor: selected.coreColor }}
                  >
                    {intensity}
                  </div>
                  <button 
                    onClick={increaseIntensity}
                    className="w-8 h-8 rounded-full bg-[#e7f3ee] flex items-center justify-center text-[#4e9778]"
                  >
                    <Plus size={16} />
                  </button>
                </div>
              </div>
              <input 
                type="range" 
                min="1" 
                max="10" 
                value={intensity} 
                onChange={(e) => setIntensity(parseInt(e.target.value))} 
                className="w-full h-2  bg-[#e0e8e4] rounded-lg appearance-none cursor-pointer accent-[#30e898]"
                style={{ 
                  background: `linear-gradient(to right, ${selected.coreColor}30, ${selected.coreColor})  `,
                  // backgroundSize: `${(intensity / 10) * 100}% 100%`,
                  // backgroundRepeat: 'no-repeat'
                }}
              />
              <div className="flex justify-between text-xs text-[#5a8c76] mt-1">
                <span>ุฎููู</span>
                <span>ุดุฏูุฏ</span>
              </div>
            </div>

            {/* Text Areas */}
            <div className="space-y-3 mb-4">
              <div>
                <label className="block text-sm font-medium mb-1 text-[#0e1b15]">ูุตู ุงูุดุนูุฑ</label>
                <textarea 
                  className="w-full bg-[#f9fbfa] border border-[#e0e8e4] rounded-xl p-3 text-sm text-[#0e1b15] focus:outline-none focus:ring-1 focus:ring-[#4e9778]"
                  placeholder="ููู ุชุดุนุฑ ุจุงูุถุจุทุ ูุงุฐุง ูุญุฏุซ ูู ุฌุณุฏูุ..."
                  rows="3"
                  value={details.description} 
                  onChange={(e) => setDetails({ ...details, description: e.target.value })} 
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium mb-1 text-[#0e1b15]">ุงููููู ุฃู ุงูุฃููุงุฑ ุงููุฑุชุจุทุฉ</label>
                <textarea 
                  className="w-full bg-[#f9fbfa] border border-[#e0e8e4] rounded-xl p-3 text-sm text-[#0e1b15] focus:outline-none focus:ring-1 focus:ring-[#4e9778]"
                  placeholder="ูุง ุงูุฐู ุญุฏุซุ ูุง ุงูุฃููุงุฑ ุงูุชู ุชุฏูุฑ ูู ุฐูููุ..."
                  rows="3"
                  value={details.context} 
                  onChange={(e) => setDetails({ ...details, context: e.target.value })} 
                />
              </div>
            </div>

            {/* Coping Strategies */}
            <div className="border border-[#e0e8e4] rounded-xl overflow-hidden">
              <button 
                className="w-full flex justify-between items-center p-3 text-[#0e1b15] font-medium"
                onClick={() => setShowCoping(!showCoping)}
              >
                <div className="flex items-center">
                  <span>ุงุณุชุฑุงุชูุฌูุงุช ุงูุชุนุงูู</span>
                  <span className="text-xs bg-[#e7f3ee] text-[#4e9778] px-2 py-1 rounded-full ml-2">
                    {selected.coping.length}
                  </span>
                </div>
                {showCoping ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
              </button>
              
              {showCoping && (
                <div className="p-3 bg-[#f9fbfa] border-t border-[#e0e8e4]">
                  <ul className="space-y-2">
                    {selected.coping.map((tip, index) => (
                      <li key={index} className="flex items-start">
                        <div className="w-5 h-5 rounded-full bg-[#e0f0e9] text-[#0e8a5f] text-xs flex items-center justify-center mt-1 mr-2 flex-shrink-0">
                          {index + 1}
                        </div>
                        <span className="text-sm text-[#374151]">{tip}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>
        ) : (
          <div className="text-center py-8">
            <div className="bg-white rounded-xl p-6 inline-block shadow-sm">
              <div className="flex justify-center mb-3">
                <div className="w-16 h-16 rounded-full bg-[#e7f3ee] flex items-center justify-center text-[#4e9778]">
                  <Smile size={32} />
                </div>
              </div>
              <p className="text-[#5a8c76] font-medium">ุงุฎุชุฑ ุดุนูุฑูุง ูู ุงูุนุฌูุฉ ูุจุฏุก ุงูุชุฏููู</p>
              <p className="text-[#5a8c76] text-sm mt-1">ุงุถุบุท ุนูู ุฃู ูุทุงุน ูุงุณุชูุดุงู ูุดุงุนุฑู</p>
            </div>
          </div>
        )}

        {/* Save Button */}
        {selected && (
          <div className="sticky bottom-4 left-0 right-0 px-4 z-10">
            <button 
              onClick={onSave}
              disabled={saved}
              className={`w-full py-3 rounded-xl font-bold flex items-center justify-center shadow-lg transition-all ${
                saved 
                  ? 'bg-green-500 text-white' 
                  : `text-white ${saved ? 'animate-pulse' : ''}`
              }`}
              style={{ 
                backgroundColor: saved ? '#10B981' : selected.coreColor,
                boxShadow: `0 4px 14px ${selected.coreColor}50`
              }}
            >
              {saved ? (
                <>
                  <Check size={20} className="mr-2" />
                  ุชู ุงูุญูุธ ุจูุฌุงุญ!
                </>
              ) : (
                <>
                  <Save size={20} className="mr-2" />
                  ุญูุธ ุงูุดุนูุฑ
                </>
              )}
            </button>
          </div>
        )}
      </div>
    </div>
  );
}